@using X.PagedList
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<ItAssetsFront.Models.AssignDevice.GetAllAssigned>

@{
    ViewData["Title"] = "Assigned Devices";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="pb-4 bg-light">
    <div class="container">
        <div class="row gy-3">
            <div class="col-12">
                <div class="card shadow-sm border-0 rounded-3">
                    <div class="card-body p-4">
                        <!-- Header -->
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h4 class="fw-bold text-primary m-0">
                                <i class="bx bx-laptop me-2"></i> Assigned Devices
                            </h4>
                            <a asp-action="Assign" class="btn btn-gradient btn-sm shadow-sm">
                                <i class="bx bx-plus-circle me-1"></i> Assign Device
                            </a>
                        </div>

                        <!-- Search -->
                        <div class="input-group mb-3">
                            <span class="input-group-text bg-white border-end-0">
                                <i class="bx bx-search text-muted"></i>
                            </span>
                            <input type="text"
                                   class="form-control border-start-0"
                                   id="deviceSearchInput"
                                   placeholder="Search devices..."
                                   onkeyup="filterDevices()" />
                        </div>

                        <!-- Table -->
                        <div class="table-responsive">
                            <table class="table table-hover align-middle" id="devicesTable">
                                <thead class="table-light">
                                    <tr>
                                        <th>#</th>
                                        <th>Device</th>
                                        <th>Employee</th>
                                        <th>Assign Date</th>
                                        <th>Status</th>
                                        <th>Return Date</th>
                                        <th>Return Status</th>
                                        <th>Qty</th>
                                        <th class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.Any())
                                    {
                                        int index = (Model.PageNumber - 1) * Model.PageSize + 1;
                                        foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>@index</td>
                                                <td class="device-name fw-semibold">
                                                    <i class="bx bx-chip text-primary me-1"></i> @item.device?.name
                                                </td>
                                                <td><i class="bx bx-user-circle text-secondary me-1"></i> @item.employee?.name</td>
                                                <td>@item.assignDate.ToString("yyyy-MM-dd")</td>
                                                <td>
                                                    <span class="badge bg-@(item.deviceStatus == "Active" ? "success" : "secondary") rounded-pill px-3 py-2">
                                                        @item.deviceStatus
                                                    </span>
                                                </td>
                                                <td>@item.returnDate?.ToString("yyyy-MM-dd")</td>
                                                <td>
                                                    <span class="badge bg-@(item.returnStatus == "Returned" ? "info" : "warning") rounded-pill px-3 py-2">
                                                        @item.returnStatus
                                                    </span>
                                                </td>
                                                <td>@item.qty</td>
                                                <td class="text-center">
                                                    @if (!string.IsNullOrWhiteSpace(item.returnStatus) && item.returnDate.HasValue)
                                                    {
                                                        <button class="btn btn-sm btn-outline-secondary rounded-circle me-2"
                                                                title="Already Returned" disabled>
                                                            <i class="bx bx-log-out"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-secondary rounded-circle me-2"
                                                                title="Already Returned" disabled>
                                                            <i class="bx bx-transfer"></i>
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <a asp-controller="DeviceAssign"
                                                           asp-action="Return"
                                                           asp-route-id="@item.id"
                                                           class="btn btn-sm btn-outline-success rounded-circle me-2"
                                                           title="Return Device">
                                                            <i class="bx bx-log-out"></i>
                                                        </a>
                                                        <a asp-controller="DeviceAssign"
                                                           asp-action="Transfer"
                                                           asp-route-employeeId="@item.employeeID"
                                                           asp-route-deviceId="@item.deviceID"
                                                           class="btn btn-sm btn-outline-warning rounded-circle me-2"
                                                           title="Transfer Device">
                                                            <i class="bx bx-transfer"></i>
                                                        </a>
                                                    }

                                                    <button class="btn btn-sm btn-outline-danger rounded-circle"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#deleteConfirmModal"
                                                            data-device-id="@item.id"
                                                            title="Delete">
                                                        <i class="bx bx-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                            index++;
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="9" class="text-center text-muted py-4">
                                                <i class="bx bx-info-circle fs-3 d-block mb-2"></i>
                                                No assigned devices found.
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                            <!-- Delete Confirmation Modal -->
                            <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmLabel" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content border-0 shadow">
                                        <form id="deleteForm" method="post">
                                            <div class="modal-header bg-danger text-white">
                                                <h5 class="modal-title d-flex align-items-center">
                                                    <i class="bx bx-error-circle me-2"></i> Confirm Deletion
                                                </h5>
                                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body text-center py-4">
                                                <i class="bx bx-trash fs-1 text-danger mb-3"></i>
                                                <p class="mb-0">Are you sure you want to delete this assignment?</p>
                                            </div>
                                            <div class="modal-footer border-0">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                                    Cancel
                                                </button>
                                                <button type="submit" class="btn btn-danger">
                                                    Yes, Delete
                                                </button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>

                            <!-- Pagination -->
                            <div class="d-flex justify-content-center mt-4">
                                @Html.PagedListPager(
                                         Model,
                                         page => Url.Action("Index", new { page }),
                                         new PagedListRenderOptions
                                {
                                    LiElementClasses = new[] { "page-item" },
                                    PageClasses = new[] { "page-link" },
                                    UlElementClasses = new[] { "pagination pagination-sm" },
                                    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                                    DisplayLinkToLastPage = PagedListDisplayMode.Always,
                                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                    DisplayLinkToNextPage = PagedListDisplayMode.Always
                                }
                                         )
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        function filterDevices() {
            const input = document.getElementById("deviceSearchInput");
            const filter = input.value.toLowerCase();
            const rows = document.querySelectorAll("#devicesTable tbody tr");

            rows.forEach(row => {
                const deviceNameCell = row.querySelector(".device-name");
                const deviceText = deviceNameCell?.innerText.toLowerCase() || "";
                row.style.display = deviceText.includes(filter) ? "" : "none";
            });
        }

        const deleteConfirmModal = document.getElementById('deleteConfirmModal');
        deleteConfirmModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const deviceId = button.getAttribute('data-device-id');
            const form = deleteConfirmModal.querySelector('#deleteForm');
            form.action = `/DeviceAssign/Delete/${deviceId}`;
        });
    </script>
}
