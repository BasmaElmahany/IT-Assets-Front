@using X.PagedList
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<ItAssetsFront.Models.AssignDevice.GetAllAssigned>

@{
    ViewData["Title"] = "Assigned Devices";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="pb-3 pb-md-4 pb-xl-5 bg-light">
    <div class="container">
        <div class="row gy-3 gy-md-4">
            <div class="col-12 col-lg-12 col-xl-12">
                <div class="card widget-card border-light shadow-sm h-100">
                    <div class="card-body p-4">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h5 class="card-title widget-card-title m-0">Assigned Devices</h5>
                            <a asp-action="Assign" class="btn btn-primary btn-sm">
                                <i class="bx bx-plus me-1"></i> Assign Device
                            </a>
                        </div>

                        <div class="mb-3">
                            <input type="text" class="form-control" id="deviceSearchInput" placeholder="Search devices..." onkeyup="filterDevices()" />
                        </div>

                        <div class="table-responsive">
                            <table class="table table-borderless bsb-table-xl text-nowrap align-middle m-0" id="devicesTable">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Device Name</th>
                                        <th>Employee</th>
                                        <th>Assign Date</th>
                                        <th>Device Status</th>
                                        <th>Return Date</th>
                                        <th>Return Status</th>
                                        <th>Quantity</th>
                                        <th class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.Any())
                                    {
                                        int index = (Model.PageNumber - 1) * Model.PageSize + 1;
                                        foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>@index</td>
                                                <td class="device-name">
                                                    <h6 class="mb-1">@item.device?.name</h6>
                                                </td>
                                                <td>
                                                    @item.employee?.name
                                                </td>
                                                <td>@item.assignDate.ToString("yyyy-MM-dd")</td>
                                                <td>@item.deviceStatus</td>
                                                <td>@item.returnDate?.ToString("yyyy-MM-dd")</td>
                                                <td>@item.returnStatus</td>
                                                <td>@item.qty</td>
                                                <td class="text-center">
                                                    @if (!string.IsNullOrWhiteSpace(item.returnStatus) && item.returnDate.HasValue)
                                                    {
                                                        <!-- Disabled Return -->
                                                        <button class="btn btn-link text-secondary p-0 me-2" title="Already Returned" disabled>
                                                            <i class='bx bx-log-out fs-5'></i>
                                                        </button>

                                                        <!-- Disabled Transfer -->
                                                        <button class="btn btn-link text-secondary p-0 me-2" title="Already Returned" disabled>
                                                            <i class='bx bx-transfer fs-5'></i>
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <!-- Active Return -->
                                                        <a asp-controller="DeviceAssign"
                                                           asp-action="Return"
                                                           asp-route-id="@item.id"
                                                           class="btn btn-link text-success p-0 me-2"
                                                           title="Return Device">
                                                            <i class='bx bx-log-out fs-5'></i>
                                                        </a>

                                                        <!-- Active Transfer -->
                                                        <a asp-controller="DeviceAssign"
                                                           asp-action="Transfer"
                                                           asp-route-employeeId="@item.employeeID"
                                                           asp-route-deviceId="@item.deviceID"
                                                           class="btn btn-link text-warning p-0 me-2"
                                                           title="Transfer Device">
                                                            <i class='bx bx-transfer fs-5'></i>
                                                        </a>
                                                    }

                                                    <button class="btn btn-link text-danger p-0"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#deleteConfirmModal"
                                                            data-device-id="@item.id">
                                                        <i class='bx bx-trash fs-5'></i>
                                                    </button>
                                                </td>
                                            </tr>
                                            index++;
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="9" class="text-center text-muted">No assigned devices found.</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                            <!-- Delete Confirmation Modal -->
                            <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmLabel" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <form id="deleteForm" method="post">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="deleteConfirmLabel">Confirm Deletion</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                Are you sure you want to delete this assignment?
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                <button type="submit" class="btn btn-danger">Yes, Delete</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>

                            <!-- Pagination -->
                            <div class="d-flex justify-content-center mt-3">
                                @Html.PagedListPager(
                                         Model,
                                         page => Url.Action("Index", new { page }),
                                         new PagedListRenderOptions
                                {
                                    LiElementClasses = new[] { "page-item" },
                                    PageClasses = new[] { "page-link" },
                                    UlElementClasses = new[] { "pagination" },
                                    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                                    DisplayLinkToLastPage = PagedListDisplayMode.Always,
                                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                    DisplayLinkToNextPage = PagedListDisplayMode.Always
                                }
                                         )
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        function filterDevices() {
            const input = document.getElementById("deviceSearchInput");
            const filter = input.value.toLowerCase();
            const rows = document.querySelectorAll("#devicesTable tbody tr");

            rows.forEach(row => {
                const deviceNameCell = row.querySelector(".device-name");
                const deviceText = deviceNameCell?.innerText.toLowerCase() || "";
                row.style.display = deviceText.includes(filter) ? "" : "none";
            });
        }

        const deleteConfirmModal = document.getElementById('deleteConfirmModal');
        deleteConfirmModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const deviceId = button.getAttribute('data-device-id');
            const form = deleteConfirmModal.querySelector('#deleteForm');
            form.action = `/DeviceAssign/Delete/${deviceId}`;
        });
    </script>
}
